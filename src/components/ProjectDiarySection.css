/* src/components/ProjectDiarySection.css */

.project-diary-section {
    padding: 80px 20px;
    background-color: #fff;
    font-family: Arial, sans-serif;
    color: #333;
    text-align: center;
}

.pd-main-headline {
    font-size: 2.5em;
    color: #557256;
    margin-bottom: 50px;
    font-weight: 700;
    text-transform: uppercase;
    text-align: center;
}

.pd-masonry-wrapper {
    height: 60vh;
    /* Set height to 60% of viewport height */
    overflow: hidden;
    /* Crucial: ensures no scrolling and content is clipped if it overflows */
    display: flex;
    /* Use flex to center the masonry grid vertically */
    align-items: center;
    /* Center masonry grid vertically within the wrapper */
    justify-content: center;
    /* Center masonry grid horizontally */
    /* No padding-bottom if no scroll */
}

/* Styles for react-masonry-css components */
.pd-masonry-grid {
    display: flex;
    margin-left: -20px;
    /* Counteract the column gap */
    width: auto;
    max-width: 1200px;
    /* Max width of the grid */
    /* Make the Masonry grid itself fill the wrapper's height */
    height: 100%;
}

.pd-masonry-grid_column {
    padding-left: 2px;
    /* Spacing between columns */
    background-clip: padding-box;
    display: flex;
    /* Make each column a flex container */
    flex-direction: column;
    /* Stack items vertically within the column */
    /* This ensures items try to distribute space within the column's height */
}

/* Style for individual grid items within the columns */
.pd-masonry-grid_column>div {
    /* Target the actual item containers */
    margin-bottom: 2px;
    /* Spacing between items in a column */
    border-radius: 8px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);
    overflow: hidden;
    /* Ensures rounded corners and crops overflowing image parts */

    /* --- Key to scaling and fitting --- */
    flex: 1 1 auto;
    /* Allow items to grow/shrink based on content, but try to distribute space */
    /* This makes items fill available height in column */
    min-height: 0;
    /* Allows the flex item to shrink below its content height if needed */
    /* Optional: Set a min-height for items if you don't want them to become too small */
    /* min-height: 80px; */

    /* The actual height of the item will now be determined by
       the combination of its content, flex properties, and parent's height.
       If images are still too large, you might need to try to calculate a
       max-height here, e.g., max-height: calc( (60vh / 3) - 20px);
       (60vh / average_num_rows_per_column) - margin_bottom; */
}

.pd-grid-item img {
    width: 100%;
    height: 100%;
    /* Make image fill the height of its parent div */
    object-fit: cover;
    /* Crucial: Scales the image to cover the entire container, cropping if necessary */
    display: block;
    /* Removes extra space below image */
}

/* No specific responsive media queries needed for Masonry columns,
     as breakpointCols handles that automatically.
     Only general styling like headline size. */
@media (max-width: 768px) {
    .pd-main-headline {
        font-size: 2em;
        margin-bottom: 30px;
    } }