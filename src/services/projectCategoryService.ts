import {
  ProjectCategory,
  ProjectDetail,
  CategoryInfo,
  ApiResponse
} from '../types/projectCategoryPageTypes';


import houseNormal from "../assets/images/projectpage/house-normal.jpg";
import appartment from "../assets/images/projectpage/appartment.png";
import houseBusiness from "../assets/images/projectpage/house-business.jpg";
import village from "../assets/images/projectpage/village.png";

// API Configuration
const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3002/api/v1';
const API_TIMEOUT = 10000; // 10 seconds

// Configuration for data source
const USE_MOCK_DATA = true;

// ========== MOCK DATA ==========

// Mock categories mapping (matching our seeded data)
const mockCategoriesData: Record<string, Omit<ProjectCategory, 'projects'>> = {
  "house-normal": {
    id: 1,
    categoryId: "house-normal",
    title: "NH√Ä PH·ªê",
    description: "Thi·∫øt k·∫ø nh√† ph·ªë hi·ªán ƒë·∫°i, t·ªëi ∆∞u h√≥a kh√¥ng gian v√† √°nh s√°ng t·ª± nhi√™n cho cu·ªôc s·ªëng ƒë√¥ th·ªã.",
    heroImageUrl: houseNormal,
    displayOrder: 0,
    isActive: true,
    projectCount: 25
  },
  "appartment": {
    id: 2,
    categoryId: "appartment",
    title: "CƒÇN H·ªò",
    description: "H√≤a quy·ªán ki·∫øn tr√∫c v·ªõi thi√™n nhi√™n, t·∫°o n√™n kh√¥ng gian s·ªëng xanh v√† th∆∞ th√°i.",
    heroImageUrl: appartment,
    displayOrder: 1,
    isActive: true,
    projectCount: 18
  },
  "village": {
    id: 3,
    categoryId: "village",
    title: "BI·ªÜT TH·ª∞",
    description: "Thi c√¥ng ph·∫ßn th√¥ v·ªõi ch·∫•t l∆∞·ª£ng cao, ƒë·∫£m b·∫£o k·∫øt c·∫•u v·ªØng ch·∫Øc cho c√¥ng tr√¨nh.",
    heroImageUrl: village,
    displayOrder: 2,
    isActive: true,
    projectCount: 12
  },
  "house-business": {
    id: 4,
    categoryId: "house-business",
    title: "TH∆Ø∆†NG M·∫†I",
    description: "Thi·∫øt k·∫ø v√† thi c√¥ng n·ªôi th·∫•t sang tr·ªçng, hi·ªán ƒë·∫°i ph√π h·ª£p v·ªõi phong c√°ch s·ªëng.",
    heroImageUrl: houseBusiness,
    displayOrder: 3,
    isActive: true,
    projectCount: 30
  }
};

// Mock project data for each category
const mockProjectsData: Record<string, ProjectDetail[]> = {
  "house-normal": [
    {
      id: 1,
      projectId: "HN001",
      title: "Nh√† Ph·ªë Hi·ªán ƒê·∫°i 3 T·∫ßng - Qu·∫≠n 7",
      clientName: "Anh Minh",
      area: "4x15m",
      constructionDate: "2024-01-15",
      address: "123 ƒê∆∞·ªùng Nguy·ªÖn VƒÉn Linh, Qu·∫≠n 7, TP.HCM",
      description: "Thi·∫øt k·∫ø nh√† ph·ªë hi·ªán ƒë·∫°i v·ªõi kh√¥ng gian m·ªü, t·∫≠n d·ª•ng t·ªëi ƒëa √°nh s√°ng t·ª± nhi√™n.",
      category: "house-normal",
      projectCategoryId: 1,
      style: "Hi·ªán ƒë·∫°i",
      thumbnailImage: "http://localhost:9000/pgdesign-assets/images/diary-image-1.jpg",
      htmlContent: "<div>Chi ti·∫øt d·ª± √°n nh√† ph·ªë hi·ªán ƒë·∫°i...</div>",
      projectImages: [
        "http://localhost:9000/pgdesign-assets/images/diary-image-1.jpg",
        "http://localhost:9000/pgdesign-assets/images/diary-image-2.jpg"
      ],
      projectStatus: "Ho√†n th√†nh ‚Ä¢ 2.5 t·ª∑",
      completionDate: "2024-06-30",
      architectName: "KTS Nguy·ªÖn VƒÉn A",
      contractorName: "PG Design",
      metaTitle: "Nh√† Ph·ªë Hi·ªán ƒê·∫°i 3 T·∫ßng",
      metaDescription: "D·ª± √°n nh√† ph·ªë hi·ªán ƒë·∫°i t·∫°i Qu·∫≠n 7",
      tags: ["nh√† ph·ªë", "hi·ªán ƒë·∫°i", "3 t·∫ßng"],
      isOnHomePage: true,
      isActive: true,
      createdAt: "2024-01-15T00:00:00Z",
      updatedAt: "2024-06-30T00:00:00Z"
    },
    {
      id: 2,
      projectId: "HN002",
      title: "Nh√† Ph·ªë T√¢n C·ªï ƒêi·ªÉn - Qu·∫≠n 2",
      clientName: "Ch·ªã Lan",
      area: "5x18m",
      constructionDate: "2024-02-01",
      address: "456 ƒê∆∞·ªùng Tr·∫ßn N√£o, Qu·∫≠n 2, TP.HCM",
      description: "Nh√† ph·ªë phong c√°ch t√¢n c·ªï ƒëi·ªÉn v·ªõi ki·∫øn tr√∫c tinh t·∫ø v√† n·ªôi th·∫•t sang tr·ªçng.",
      category: "house-normal",
      projectCategoryId: 1,
      style: "T√¢n c·ªï ƒëi·ªÉn",
      thumbnailImage: "http://localhost:9000/pgdesign-assets/images/diary-image-2.jpg",
      htmlContent: "<div>Chi ti·∫øt d·ª± √°n nh√† ph·ªë t√¢n c·ªï ƒëi·ªÉn...</div>",
      projectImages: [
        "http://localhost:9000/pgdesign-assets/images/diary-image-2.jpg",
        "http://localhost:9000/pgdesign-assets/images/diary-image-3.jpg"
      ],
      projectStatus: "ƒêang thi c√¥ng ‚Ä¢ 3.2 t·ª∑",
      architectName: "KTS Ph·∫°m Th·ªã B",
      contractorName: "PG Design",
      metaTitle: "Nh√† Ph·ªë T√¢n C·ªï ƒêi·ªÉn",
      metaDescription: "D·ª± √°n nh√† ph·ªë t√¢n c·ªï ƒëi·ªÉn t·∫°i Qu·∫≠n 2",
      tags: ["nh√† ph·ªë", "t√¢n c·ªï ƒëi·ªÉn", "sang tr·ªçng"],
      isOnHomePage: false,
      isActive: true,
      createdAt: "2024-02-01T00:00:00Z",
      updatedAt: "2024-02-01T00:00:00Z"
    }
  ],
  "appartment": [
    {
      id: 3,
      projectId: "HF001",
      title: "X√¢y Nh√† Tr·ªçn G√≥i 2 T·∫ßng - B√¨nh D∆∞∆°ng",
      clientName: "Anh T√πng",
      area: "6x20m",
      constructionDate: "2024-03-01",
      address: "789 ƒê∆∞·ªùng Dƒ© An, B√¨nh D∆∞∆°ng",
      description: "D·ª± √°n x√¢y nh√† tr·ªçn g√≥i bao g·ªìm thi·∫øt k·∫ø, thi c√¥ng v√† n·ªôi th·∫•t ho√†n thi·ªán.",
      category: "appartment",
      projectCategoryId: 2,
      style: "Hi·ªán ƒë·∫°i",
      thumbnailImage: "http://localhost:9000/pgdesign-assets/images/diary-image-3.jpg",
      htmlContent: "<div>Chi ti·∫øt d·ª± √°n x√¢y nh√† tr·ªçn g√≥i...</div>",
      projectImages: [
        "http://localhost:9000/pgdesign-assets/images/diary-image-3.jpg",
        "http://localhost:9000/pgdesign-assets/images/diary-image-4.jpg"
      ],
      projectStatus: "Ho√†n th√†nh ‚Ä¢ 1.8 t·ª∑",
      completionDate: "2024-08-15",
      architectName: "KTS L√™ VƒÉn C",
      contractorName: "PG Design",
      metaTitle: "X√¢y Nh√† Tr·ªçn G√≥i 2 T·∫ßng",
      metaDescription: "D·ª± √°n x√¢y nh√† tr·ªçn g√≥i t·∫°i B√¨nh D∆∞∆°ng",
      tags: ["x√¢y nh√†", "tr·ªçn g√≥i", "2 t·∫ßng"],
      isOnHomePage: true,
      isActive: true,
      createdAt: "2024-03-01T00:00:00Z",
      updatedAt: "2024-08-15T00:00:00Z"
    }
  ],
  "village": [
    {
      id: 4,
      projectId: "HR001",
      title: "Thi C√¥ng Ph·∫ßn Th√¥ Bi·ªát Th·ª± - ƒê·ªìng Nai",
      clientName: "Anh Khang",
      area: "8x25m",
      constructionDate: "2024-04-01",
      address: "321 ƒê∆∞·ªùng Bi√™n H√≤a, ƒê·ªìng Nai",
      description: "Thi c√¥ng ph·∫ßn th√¥ bi·ªát th·ª± v·ªõi k·∫øt c·∫•u b√™ t√¥ng c·ªët th√©p ch·∫•t l∆∞·ª£ng cao.",
      category: "village",
      projectCategoryId: 3,
      style: "Bi·ªát th·ª±",
      thumbnailImage: "http://localhost:9000/pgdesign-assets/images/diary-image-4.jpg",
      htmlContent: "<div>Chi ti·∫øt d·ª± √°n thi c√¥ng ph·∫ßn th√¥...</div>",
      projectImages: [
        "http://localhost:9000/pgdesign-assets/images/diary-image-4.jpg",
        "http://localhost:9000/pgdesign-assets/images/diary-image-5.jpg"
      ],
      projectStatus: "ƒêang thi c√¥ng ‚Ä¢ 2.0 t·ª∑",
      architectName: "KTS Ho√†ng VƒÉn D",
      contractorName: "PG Design",
      metaTitle: "Thi C√¥ng Ph·∫ßn Th√¥ Bi·ªát Th·ª±",
      metaDescription: "D·ª± √°n thi c√¥ng ph·∫ßn th√¥ t·∫°i ƒê·ªìng Nai",
      tags: ["ph·∫ßn th√¥", "bi·ªát th·ª±", "b√™ t√¥ng"],
      isOnHomePage: false,
      isActive: true,
      createdAt: "2024-04-01T00:00:00Z",
      updatedAt: "2024-04-01T00:00:00Z"
    }
  ],
  "house-business": [
    {
      id: 5,
      projectId: "HI001",
      title: "Thi·∫øt K·∫ø N·ªôi Th·∫•t CƒÉn H·ªô Duplex - Qu·∫≠n 1",
      clientName: "Ch·ªã Hoa",
      area: "120m¬≤",
      constructionDate: "2024-05-01",
      address: "555 ƒê∆∞·ªùng Nguy·ªÖn Hu·ªá, Qu·∫≠n 1, TP.HCM",
      description: "Thi·∫øt k·∫ø n·ªôi th·∫•t cƒÉn h·ªô duplex cao c·∫•p v·ªõi phong c√°ch hi·ªán ƒë·∫°i v√† tinh t·∫ø.",
      category: "house-business",
      projectCategoryId: 4,
      style: "Hi·ªán ƒë·∫°i cao c·∫•p",
      thumbnailImage: "http://localhost:9000/pgdesign-assets/images/diary-image-5.jpg",
      htmlContent: "<div>Chi ti·∫øt d·ª± √°n thi·∫øt k·∫ø n·ªôi th·∫•t...</div>",
      projectImages: [
        "http://localhost:9000/pgdesign-assets/images/diary-image-5.jpg",
        "http://localhost:9000/pgdesign-assets/images/diary-image-6.jpg"
      ],
      projectStatus: "Ho√†n th√†nh ‚Ä¢ 800 tri·ªáu",
      completionDate: "2024-07-15",
      architectName: "KTS Tr·∫ßn Th·ªã E",
      contractorName: "PG Design",
      metaTitle: "Thi·∫øt K·∫ø N·ªôi Th·∫•t CƒÉn H·ªô Duplex",
      metaDescription: "D·ª± √°n n·ªôi th·∫•t cƒÉn h·ªô duplex t·∫°i Qu·∫≠n 1",
      tags: ["n·ªôi th·∫•t", "duplex", "cao c·∫•p"],
      isOnHomePage: true,
      isActive: true,
      createdAt: "2024-05-01T00:00:00Z",
      updatedAt: "2024-07-15T00:00:00Z"
    }
  ]
};

// Utility function for mock delay
const delay = (ms: number): Promise<void> => 
  new Promise(resolve => setTimeout(resolve, ms));

// Transform dates (for compatibility) - no longer needed since we use strings
const transformDates = (data: any): any => {
  // Return data as-is since we now use string dates
  return data;
};

// ========== MOCK FUNCTIONS ==========

const fetchCategoryWithProjectsMock = async (categoryId: string): Promise<ProjectCategory> => {
  console.log(`üé≠ Mock Data: Fetching category ${categoryId} with projects`);
  await delay(800);

  const categoryInfo = mockCategoriesData[categoryId];
  if (!categoryInfo) {
    throw new Error(`Category ${categoryId} not found`);
  }

  const projects = mockProjectsData[categoryId] || [];

  return {
    ...categoryInfo,
    projects: projects,
    projectCount: projects.length
  };
};

// ========== API FUNCTIONS ==========

const fetchCategoryWithProjectsApi = async (categoryId: string): Promise<ProjectCategory> => {
  try {
    console.log(`üåê Real API: Fetching category ${categoryId} with projects`);
    
    const response = await fetch(`${API_BASE_URL}/projectdetail/category/${categoryId}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
      },
      signal: AbortSignal.timeout(API_TIMEOUT)
    });

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const projectsData: ApiResponse<ProjectDetail[]> = await response.json();
    
    if (!projectsData.success) {
      throw new Error(projectsData.message || 'Failed to fetch projects data');
    }

    // Get category info (you might need a separate API call for this)
    const categoryInfo: CategoryInfo = mockCategoriesData[categoryId] || {
      id: 1,
      categoryId: categoryId,
      title: categoryId.toUpperCase().replace(/-/g, ' '),
      description: `Category ${categoryId}`,
      heroImageUrl: '/assets/images/default-hero.jpg',
      displayOrder: 0,
      isActive: true
    };

    return {
      ...categoryInfo,
      projects: projectsData.data,
      projectCount: projectsData.data.length
    };
  } catch (error: any) {
    console.error(`Error fetching category ${categoryId}:`, error);
    throw new Error(`Failed to fetch category data: ${error.message}`);
  }
};

// ========== EXPORTED FUNCTIONS ==========

/**
 * Fetch category with all its projects (Direct relationship: category -> projects)
 */
export const fetchCategoryWithProjects = async (categoryId: string): Promise<ProjectCategory> => {
  const dataSource = USE_MOCK_DATA ? 'üé≠ Mock Data' : 'üåê Real API';
  console.log(`${dataSource}: Fetching category ${categoryId} with projects`);
  
  return USE_MOCK_DATA 
    ? fetchCategoryWithProjectsMock(categoryId)
    : fetchCategoryWithProjectsApi(categoryId);
};

/**
 * Get current data source
 */
export const getCurrentDataSource = (): 'mock' | 'api' => {
  return USE_MOCK_DATA ? 'mock' : 'api';
};

/**
 * Get all available categories
 */
export const getAvailableCategories = (): string[] => {
  return Object.keys(mockCategoriesData);
};

// For backward compatibility (deprecated - use fetchCategoryWithProjects instead)
export const fetchCategoryWithSubCategories = fetchCategoryWithProjects; 